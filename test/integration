#!/usr/bin/env nix-shell
#! nix-shell -i bash -p bats coreutils findutils gawk git gnugrep gnused ncurses perl socat utillinux

set -eu

export ORIG_PWD SANDBOX XDG_CONFIG_HOME EXECUTABLE
ORIG_PWD="$PWD"
TOPLEVEL=$(git -C "${BASH_SOURCE[0]%/*}" rev-parse --show-toplevel)
SANDBOX=$(mktemp -dt "nix-shell-bit-sandbox.XXXXXX")
XDG_CONFIG_HOME="$SANDBOX/XDG_CONFIG_HOME.seed"

trap "cd '$ORIG_PWD'; rm -rf '$SANDBOX'" EXIT INT QUIT TERM

mkdir "$SANDBOX/"{remotes,locals}

# Prepare executable
nix-shell --run 'cabal v2-build'
EXECUTABLE=$(find $TOPLEVEL \
                  -type f \
                  -executable \
                  -name nix-shell-bit \
                  -printf "%T@ %p\n" \
             | sort -n | tail -n 1 | awk '{print $NF}')

# Configure sandbox
mkdir "$XDG_CONFIG_HOME"
mkdir "$XDG_CONFIG_HOME/git"
touch "$XDG_CONFIG_HOME/git/config"
git config --global user.email "nobody@example.com"
git config --global user.name "nobody"
mkdir "$XDG_CONFIG_HOME/nix-shell-bit"
cat > "$XDG_CONFIG_HOME/nix-shell-bit/config.dhall" <<EOF
{ nixShellBitUrl =
    [ "$SANDBOX/NIX_SHELL_BIT_URL" ] : Optional Text
, nixShellBitBranch =
    [] : Optional Text
}
EOF

# Prepare project remote
git init --quiet --template='' "$SANDBOX/remotes/PROJECT"
echo '0.1.0' > "$SANDBOX/remotes/PROJECT/VERSION"
git -C "$SANDBOX/remotes/PROJECT" add VERSION
git -C "$SANDBOX/remotes/PROJECT" commit --quiet -m '0.1.0'

# Prepare seeds
git clone --quiet --template='' "$SANDBOX/remotes/PROJECT" "$SANDBOX/locals/PROJECT.seed"

git init --quiet --template='' "$SANDBOX/NIX_SHELL_BIT_URL.seed"
cat > "$SANDBOX/NIX_SHELL_BIT_URL.seed/default.nix" <<'EOF'
{
  PROJECT = (import <nixpkgs> {}).mkShell {
    name = "PROJECT";
    version = "0.1.0";
    shellHook = ''
      echo "Entered $name $version environment"
      [ "''${AUTO-exit}" == 'exit' ] && exit
    '';
  };
}
EOF
git -C "$SANDBOX/NIX_SHELL_BIT_URL.seed" add default.nix
git -C "$SANDBOX/NIX_SHELL_BIT_URL.seed" commit --quiet -m 'PROJECT 0.1.0'
git -C "$SANDBOX/NIX_SHELL_BIT_URL.seed" tag PROJECT-0.1.0

XDG_CONFIG_HOME="$SANDBOX/XDG_CONFIG_HOME" \
    bats ${CI:+--tap} --recursive "$TOPLEVEL/test"

# vim: filetype=sh
