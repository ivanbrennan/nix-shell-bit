#!/usr/bin/env nix-shell
#! nix-shell -i bash -p bats coreutils findutils gawk git gnugrep ncurses perl socat

set -eu

export ORIG_PWD="$PWD"
TOPLEVEL=$(git -C "${BASH_SOURCE[0]%/*}" rev-parse --show-toplevel)

SANDBOX=$(mktemp -dt "integration-test-sandbox.XXXXXX")
export SAND="$SANDBOX/sand"
export SEED="$SANDBOX/seed"
export XDG_CONFIG_HOME="$SAND/XDG_CONFIG_HOME"
export LOCAL_PROJECT="$SAND/PROJECT-local"
export REMOTE_SHELLS="$SAND/NIX_SHELLS"

nix-shell --run 'cabal v2-build'
export EXECUTABLE=$(find $TOPLEVEL           \
                         -type f -executable \
                         -name shellbit \
                         -printf "%T@ %p\n"  \
                    | sort -n | tail -n 1    \
                    | awk '{print $NF}')

trap "cd '$ORIG_PWD'; rm -rf '$SANDBOX'" EXIT INT QUIT TERM

mkdir "$SAND"

# Configure sandbox git
mkdir "$XDG_CONFIG_HOME" \
      "$XDG_CONFIG_HOME/git"
touch "$XDG_CONFIG_HOME/git/config"
git config --global user.email "nobody@example.com"
git config --global user.name "nobody"

# Configure sandbox shellbit
mkdir "$XDG_CONFIG_HOME/shellbit"
cat > "$XDG_CONFIG_HOME/shellbit/config.dhall" <<EOF
{ shellbitUrl =
    [ "$REMOTE_SHELLS" ] : Optional Text
, shellbitBranch =
    [] : Optional Text
}
EOF

# Prepare project remote
REMOTE_PROJECT="$SAND/PROJECT"
git init --quiet --template='' "$REMOTE_PROJECT"
echo '0.1.0' > "$REMOTE_PROJECT/VERSION"
git -C "$REMOTE_PROJECT" add VERSION
git -C "$REMOTE_PROJECT" commit --quiet -m '0.1.0'

# Prepare seeds
git clone --quiet --template='' "$REMOTE_PROJECT" "$LOCAL_PROJECT"

# Setup remote derivation
git init --quiet --template='' "$REMOTE_SHELLS"
cat > "$REMOTE_SHELLS/default.nix" <<'EOF'
{
  PROJECT = (import <nixpkgs> {}).mkShell {
    name = "PROJECT";
    version = "0.1.0";
    shellHook = ''
      echo "Entered $name $version environment"
      [ "''${AUTO-exit}" == 'exit' ] && exit
    '';
  };
}
EOF
git -C "$REMOTE_SHELLS" add default.nix
git -C "$REMOTE_SHELLS" commit --quiet -m 'PROJECT 0.1.0'
git -C "$REMOTE_SHELLS" tag PROJECT-0.1.0

# Save state to seed
cp -r "$SAND" "$SEED"

bats ${CI:+--tap} --recursive "$TOPLEVEL/test"

# vim: filetype=sh
